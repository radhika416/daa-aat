{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
def maximumPeople(towns, cloud_start, cloud_end):\
    towns = sorted(towns)\
    cloud_start = sorted(cloud_start)\
    cloud_end = sorted(cloud_end)\
\
    cloud_start_i = 0\
    cloud_end_i = 0\
    clouds = set()\
\
    d = defaultdict(int)\
    free = 0\
    for town_i in range(len(towns)):\
        town_x = towns[town_i][0]\
        while cloud_start_i < len(cloud_start) and cloud_start[cloud_start_i][0] <= town_x:\
            clouds.add(cloud_start[cloud_start_i][1])\
            cloud_start_i += 1\
        while cloud_end_i < len(cloud_end) and cloud_end[cloud_end_i][0] < town_x:\
            clouds.remove(cloud_end[cloud_end_i][1])\
            cloud_end_i += 1\
        if len(clouds) == 1:\
            towns[town_i][2] = list(clouds)[0]\
            d[list(clouds)[0]] += towns[town_i][1]\
        elif len(clouds) == 0:\
            free += towns[town_i][1]\
\
    return max(d.values(), default=0) + free\
\
\
def main():\
    n = int(input().strip())\
    p = [int(x) for x in input().strip().split()]\
    x = [int(x) for x in input().strip().split()]\
    towns = [[xi, pi, -1] for xi, pi in zip(x, p)]\
    m = int(input().strip())\
    y = [int(x) for x in input().strip().split()]\
    r = [int(x) for x in input().strip().split()]\
    cloud_start = [[y[i]-r[i], i] for i in range(m)]\
    cloud_end = [[y[i]+r[i], i] for i in range(m)]\
    result = maximumPeople(towns, cloud_start, cloud_end)\
    print(result)\
\
if _name_ == "_main_":\
    main()\
[22:49, 7/15/2024] Hannah Biju: thanks}